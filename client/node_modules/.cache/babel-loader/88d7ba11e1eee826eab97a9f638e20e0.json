{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wlsrb\\\\workplace\\\\api-practice\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport \"./App.css\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport HTMLReactParser from \"html-react-parser\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  const [movieContent, setMovieContent] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [viewContent, setViewContent] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/api/get\").then(response => setViewContent(response.data));\n  }, []);\n\n  const submitReview = () => {\n    Axios.post(\"http://localhost:8000/api/insert\", {\n      title: movieContent.title,\n      content: movieContent.content\n    }).then(() => {\n      alert(\"Success\");\n    });\n  };\n\n  const getValue = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMovieContent({ ...movieContent,\n      [name]: value\n    });\n    console.log(movieContent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [viewContent.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: element.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: HTMLReactParser(element.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input\",\n        type: \"text\",\n        placeholder: \"Title of movie\",\n        onChange: getValue,\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        data: \"<p>Hello from CKEditor 5!</p>\",\n        onReady: editor => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n          setMovieContent({ ...movieContent,\n            content: data\n          });\n          console.log(movieContent);\n        },\n        onBlur: (event, editor) => {\n          console.log(\"Blur.\", editor);\n        },\n        onFocus: (event, editor) => {\n          console.log(\"Focus.\", editor);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: submitReview //   onClick={() => setViewContent(viewContent.concat({ ...movieContent }))}\n      ,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}, \"Rodbkrbw8AA+qVYH2kc9QAgNfnE=\"));\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$React.memo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/wlsrb/workplace/api-practice/client/src/App.jsx"],"names":["React","useEffect","useState","useMemo","CKEditor","ClassicEditor","HTMLReactParser","Axios","App","memo","movieContent","setMovieContent","title","content","viewContent","setViewContent","get","then","response","data","submitReview","post","alert","getValue","e","name","value","target","console","log","map","element","editor","event","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./App.css\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Axios from \"axios\";\r\n\r\nconst App = React.memo(() => {\r\n  const [movieContent, setMovieContent] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const [viewContent, setViewContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8000/api/get\").then((response) =>\r\n      setViewContent(response.data)\r\n    );\r\n  }, []);\r\n\r\n  const submitReview = () => {\r\n    Axios.post(\"http://localhost:8000/api/insert\", {\r\n      title: movieContent.title,\r\n      content: movieContent.content,\r\n    }).then(() => {\r\n      alert(\"Success\");\r\n    });\r\n  };\r\n\r\n  const getValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setMovieContent({\r\n      ...movieContent,\r\n      [name]: value,\r\n    });\r\n    console.log(movieContent);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Movie Review</h1>\r\n      <div className=\"movie-container\">\r\n        {viewContent.map((element) => {\r\n          return (\r\n            <div>\r\n              <h2>{element.title}</h2>\r\n              <div>{HTMLReactParser(element.content)}</div>\r\n            </div>\r\n          );\r\n        })}\r\n        <h2>Title</h2>\r\n        <div>Contents</div>\r\n      </div>\r\n\r\n      <div className=\"form-wrapper\">\r\n        <input\r\n          className=\"title-input\"\r\n          type=\"text\"\r\n          placeholder=\"Title of movie\"\r\n          onChange={getValue}\r\n          name=\"title\"\r\n        />\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"<p>Hello from CKEditor 5!</p>\"\r\n          onReady={(editor) => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n            setMovieContent({\r\n              ...movieContent,\r\n              content: data,\r\n            });\r\n            console.log(movieContent);\r\n          }}\r\n          onBlur={(event, editor) => {\r\n            console.log(\"Blur.\", editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n            console.log(\"Focus.\", editor);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className=\"submit-button\"\r\n        onClick={submitReview}\r\n        //   onClick={() => setViewContent(viewContent.concat({ ...movieContent }))}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}